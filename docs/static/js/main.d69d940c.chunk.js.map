{"version":3,"sources":["CounterApp.jsx","index.js"],"names":["CounterApp","value","useState","counter","setCounter","onClick","e","divRoot","document","querySelector","ReactDOM","render"],"mappings":"sLA8BeA,EAzBI,SAAC,GAAqB,IAAD,IAAlBC,aAAkB,MAAV,IAAU,IACRC,mBAASD,GADD,mBAC/BE,EAD+B,KACtBC,EADsB,KAStC,OACE,qCACE,4CACA,6BAAKD,IAEL,wBAAQE,QAVM,SAACC,GAEjBF,EAAWD,EAAU,IAQnB,gBACA,wBAAQE,QAAS,kBAAMD,EAAWH,IAAlC,mBACA,wBAAQI,QAAS,kBAAMD,EAAWD,EAAU,IAA5C,oBChBAI,G,MAAUC,SAASC,cAAc,UAIvCC,IAASC,OAAO,cAAC,EAAD,CAAYV,MAAO,MAASM,K","file":"static/js/main.d69d940c.chunk.js","sourcesContent":["//SNIPET racfcp ---Crea un FC con props\r\n\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CounterApp = ({ value = 100 }) => {\r\n  const [counter, setCounter] = useState(value); //retorna array con 2 valores\r\n\r\n  //handleAdd\r\n  const handleAdd = (e) => {\r\n    //SI fuera counter++ mutariamos los valores de una constante pero con el set counter se indica que va a cambiar el valor\r\n    setCounter(counter + 1);\r\n    /* setCounter(c)=>c+1 */\r\n  };\r\n  return (\r\n    <>\r\n      <h1>CounterApp</h1>\r\n      <h2>{counter}</h2>\r\n      {/* se manda el puntero de la APP osea sin () porque sino React la ejecutaria */}\r\n      <button onClick={handleAdd}>+1</button>\r\n      <button onClick={() => setCounter(value)}>Reset</button>\r\n      <button onClick={() => setCounter(counter - 1)}>-1</button>\r\n    </>\r\n  );\r\n};\r\n\r\nCounterApp.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default CounterApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport CounterApp from \"./CounterApp\";\r\n//import PrimerApp from \"./PrimerApp\";\r\nimport \"./index.css\";\r\nconst divRoot = document.querySelector(\"#root\");\r\n\r\n//ReactDOM.render(<PrimerApp saludo=\"Hola soy Diego\" />, divRoot);\r\n\r\nReactDOM.render(<CounterApp value={100} />, divRoot);\r\n"],"sourceRoot":""}